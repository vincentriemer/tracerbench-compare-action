import { AttachMessageTransport } from "@tracerbench/message-transport";
import { RootConnection } from "@tracerbench/protocol-connection";
import { Process, Stdio } from "@tracerbench/spawn";
import { Chrome, SpawnOptions } from "@tracerbench/spawn-chrome";
import { RaceCancellation } from "race-cancellation";
export * from "@tracerbench/message-transport";
export * from "@tracerbench/protocol-connection/types";
export * from "@tracerbench/spawn/types";
export * from "@tracerbench/spawn-chrome/types";
export declare function spawnChrome(options?: Partial<SpawnOptions>): ChromeWithPipeConnection;
export declare function spawnWithPipe(executable: string, args: string[], stdio?: Stdio): ProcessWithPipeConnection;
export declare function spawnWithWebSocket(executable: string, args: string[], stdio?: Stdio, raceCancellation?: RaceCancellation): Promise<ProcessWithWebSocketConnection>;
export declare function newProtocolConnection(attach: AttachMessageTransport, raceCancellation?: RaceCancellation): RootConnection;
export { default as openWebSocket, } from "@tracerbench/websocket-message-transport";
export { default as findChrome } from "@tracerbench/find-chrome";
export interface ChromeWithPipeConnection extends Chrome {
    /**
     * Connection to devtools protocol https://chromedevtools.github.io/devtools-protocol/
     */
    connection: RootConnection;
    /**
     * Close browser.
     */
    close(timeout?: number, raceCancellation?: RaceCancellation): Promise<void>;
}
export interface ProcessWithPipeConnection extends Process {
    /**
     * Connection to devtools protocol https://chromedevtools.github.io/devtools-protocol/
     */
    connection: RootConnection;
    /**
     * Close browser.
     */
    close(timeout?: number, raceCancellation?: RaceCancellation): Promise<void>;
}
export interface ProcessWithWebSocketConnection extends Process {
    /**
     * Connection to devtools protocol https://chromedevtools.github.io/devtools-protocol/
     */
    connection: RootConnection;
    /**
     * Closes the web socket.
     */
    close(): void;
}
//# sourceMappingURL=index.d.ts.map