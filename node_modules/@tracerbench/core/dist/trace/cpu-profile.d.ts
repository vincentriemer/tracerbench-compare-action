import { HierarchyNode } from 'd3-hierarchy';
import { ICpuProfile, ICpuProfileNode, ISample, ITraceEvent } from '../trace';
export default class CpuProfile {
    profile: ICpuProfile;
    /**
     * Node by node id.
     */
    nodeMap: Map<number, ICpuProfileNode>;
    samples: ISample[];
    /**
     * Root parent
     */
    root?: ICpuProfileNode;
    start: number;
    end: number;
    duration: number;
    hierarchy: HierarchyNode<ICpuProfileNode>;
    private parentLinks;
    private childrenLinks;
    constructor(profile: ICpuProfile, events: ITraceEvent[], min: number, max: number);
    parent(node: ICpuProfileNode): ICpuProfileNode | undefined;
    children(node: ICpuProfileNode): ICpuProfileNode[] | undefined;
    node(id: number): ICpuProfileNode;
}
export declare function getChildren(node: HierarchyNode<ICpuProfileNode>): HierarchyNode<ICpuProfileNode>[];
export declare function isMetaNode(node: ICpuProfileNode): boolean;
//# sourceMappingURL=cpu-profile.d.ts.map